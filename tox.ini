# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[flake8]
max-line-length = 100

[tox]
skipsdist = True
skip_missing_interpreters = True
envlist = fmt, lint, unit, integration

[vars]
all_path = {[vars]src_path} {[vars]tst_path}
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/

[testenv]
deps =
	poetry>=2.1.3
passenv =
	PYTHONPATH
	CHARM_BUILD_DIR
	MODEL_SETTINGS
	KUBECONFIG
setenv =
	PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
	PYTHONBREAKPOINT=ipdb.set_trace
	PY_COLORS=1

[testenv:update-requirements]
skip_install = true
commands_pre =
	# updating all groups' locked dependencies:
	poetry lock --regenerate
	# NOTE: the command above is to be executed before the command below!
	# installing only the dependencies required for exporting requirements:
	poetry install --only update-requirements
	poetry self add poetry-plugin-export
commands =
	# exporting locked charm dependencies into pip-compatible requirements.txt format:
	poetry export --only charm -f requirements.txt -o requirements.txt --without-hashes
description = Update requirements including those in subdirs

[testenv:fmt]
skip_install = true
commands_pre =
	poetry install --only fmt
commands =
	isort {[vars]all_path}
	black {[vars]all_path}
description = Apply coding style standards to code

[testenv:lint]
skip_install = true
commands_pre =
	poetry install --only lint
commands =
	# uncomment the following line if this charm owns a lib
	# codespell {[vars]lib_path}
	codespell {toxinidir}/. --skip {toxinidir}/.git --skip {toxinidir}/.tox \
	--skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
	--skip {toxinidir}/.mypy_cache \
	--skip {toxinidir}/icon.svg --skip *.json.tmpl
	# pflake8 wrapper supports config from pyproject.toml
	pflake8 {[vars]all_path}
	isort --check-only --diff {[vars]all_path}
	black --check --diff {[vars]all_path}
description = Check code against coding style standards

[testenv:tflint]
allowlist_externals =
	tflint
commands =
	tflint --chdir=terraform --recursive
description = Check Terraform code against coding style standards

[testenv:unit]
skip_install = true
commands_pre =
	poetry install --only charm,unit
commands =
	coverage run --source={[vars]src_path} \
	-m pytest --ignore={[vars]tst_path}integration -vv --tb native {posargs}
	coverage report
	coverage xml
description = Run unit tests

[testenv:integration]
skip_install = true
commands_pre =
	poetry install --only integration
commands = pytest -vv --tb native --asyncio-mode=auto {[vars]tst_path}integration --log-cli-level=INFO -s {posargs}
description = Run integration tests